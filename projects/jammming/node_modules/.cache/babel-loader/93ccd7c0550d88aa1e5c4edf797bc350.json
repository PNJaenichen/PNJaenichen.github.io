{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nate\\\\Desktop\\\\website\\\\PNJaenichen.github.io\\\\projects\\\\jammming\\\\src\\\\Components\\\\App\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport { SearchBar } from '../SearchBar/SearchBar';\nimport { SearchResults } from '../SearchResults/SearchResults';\nimport { Playlist } from '../Playlist/Playlist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playlistName: 'testList',\n      playlistTracks: [{\n        id: 1,\n        name: 'Tiny Dancer',\n        artist: 'Elton John',\n        album: 'Madman Across The Water'\n      }, {\n        id: 2,\n        name: 'Indian Outlaw',\n        artist: 'Tim McGraw',\n        album: 'Love Story'\n      }],\n      searchResults: [{\n        id: 3,\n        name: 'song3',\n        artist: 'artist3',\n        album: 'album3'\n      }, {\n        id: 4,\n        name: 'song4',\n        artist: 'artist4',\n        album: 'album4'\n      }]\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.addTrack.bind(this);\n    this.updatePlaylistName = this.addTrack.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    const prevPlaylist = this.state.playlistTracks;\n    const trackIDs = prevPlaylist.map(a => a.id);\n\n    if (trackIDs.includes(track.id)) {\n      const newList = prevPlaylist.push(track);\n      this.setState({\n        playlistTracks: newList\n      });\n    }\n  }\n\n  removeTrack(track) {\n    const prevPlaylist = this.state.playlistTracks;\n    const newList = prevPlaylist.filter(a => a.id !== track.id);\n    this.setState({\n      playlistTracks: newList\n    });\n  }\n\n  updatePlaylistName(newName) {\n    this.setState({\n      playlistName: newName\n    });\n  }\n\n  savePlaylist() {\n    return this.state.playlistTracks.map(a => a.id);\n  }\n\n  search(term) {\n    console.log(term);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: \"mmm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), \"ing\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          onSearch: this.search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-playlist\",\n          children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n            searchResults: this.state.searchResults,\n            onAdd: this.addTrack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n            name: this.state.playlistName,\n            onNameChange: this.updatePlaylistName,\n            tracks: this.state.playlistTracks,\n            onRemove: this.removeTrack,\n            onsave: this.savePlaylist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Nate/Desktop/website/PNJaenichen.github.io/projects/jammming/src/Components/App/App.js"],"names":["React","SearchBar","SearchResults","Playlist","App","Component","constructor","props","state","playlistName","playlistTracks","id","name","artist","album","searchResults","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","track","prevPlaylist","trackIDs","map","a","includes","newList","push","setState","filter","newName","term","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport { SearchBar } from '../SearchBar/SearchBar';\r\nimport { SearchResults } from '../SearchResults/SearchResults';\r\nimport { Playlist } from '../Playlist/Playlist';\r\n\r\nexport class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playlistName: 'testList',\r\n      playlistTracks: [\r\n        {\r\n          id: 1,\r\n          name: 'Tiny Dancer',\r\n          artist: 'Elton John',\r\n          album: 'Madman Across The Water'\r\n        },\r\n        {\r\n          id: 2,\r\n          name: 'Indian Outlaw',\r\n          artist: 'Tim McGraw',\r\n          album: 'Love Story'\r\n        }],\r\n      searchResults: [\r\n        {\r\n          id: 3,\r\n          name: 'song3',\r\n          artist: 'artist3',\r\n          album: 'album3'\r\n        },\r\n        {\r\n          id: 4,\r\n          name: 'song4',\r\n          artist: 'artist4',\r\n          album: 'album4'\r\n        }\r\n      ],\r\n    }\r\n    this.addTrack = this.addTrack.bind(this);\r\n    this.removeTrack = this.addTrack.bind(this);\r\n    this.updatePlaylistName = this.addTrack.bind(this);\r\n    this.savePlaylist = this.savePlaylist.bind(this);\r\n    this.search = this.search.bind(this);\r\n  }\r\n\r\n  addTrack(track) {\r\n    const prevPlaylist = this.state.playlistTracks;\r\n    const trackIDs = prevPlaylist.map(a => a.id);\r\n    if (trackIDs.includes(track.id)) {\r\n      const newList = prevPlaylist.push(track);\r\n      this.setState({playlistTracks: newList});\r\n    }\r\n  }\r\n\r\n  removeTrack(track) {\r\n    const prevPlaylist = this.state.playlistTracks;\r\n    const newList = prevPlaylist.filter(a => a.id !== track.id);\r\n    this.setState({playlistTracks: newList})\r\n  }\r\n\r\n  updatePlaylistName(newName) {\r\n    this.setState({playlistName: newName})\r\n  }\r\n\r\n  savePlaylist() {\r\n    return this.state.playlistTracks.map(a => a.id);\r\n  }\r\n\r\n  search(term) {\r\n    console.log(term);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <h1>Ja<span className='highlight'>mmm</span>ing</h1>\r\n        <div className=\"App\">\r\n          <SearchBar onSearch={this.search} />\r\n          <div className='App-playlist'>\r\n            <SearchResults searchResults={this.state.searchResults} onAdd={this.addTrack}/>\r\n            <Playlist name={this.state.playlistName} onNameChange={this.updatePlaylistName} tracks={this.state.playlistTracks} onRemove={this.removeTrack} onsave={this.savePlaylist} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}