{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nate\\\\Desktop\\\\website\\\\PNJaenichen.github.io\\\\projects\\\\jammming\\\\src\\\\Components\\\\App\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport { SearchBar } from '../SearchBar/SearchBar';\nimport { SearchResults } from '../SearchResults/SearchResults';\nimport { Playlist } from '../Playlist/Playlist';\nimport { Spotify } from '../../util/Spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playlistName: 'testList',\n      playlistTracks: [],\n      searchResults: []\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('load', () => {\n      Spotify.getAccessToken();\n    });\n  }\n\n  addTrack(track) {\n    const prevPlaylist = this.state.playlistTracks;\n    const trackIDs = prevPlaylist.map(a => a.id);\n\n    if (!trackIDs.includes(track.id) || trackIDs.length > 0) {\n      const newList = prevPlaylist.push(track);\n      this.setState({\n        playlistTracks: newList\n      });\n    }\n  }\n\n  removeTrack(track) {\n    const prevPlaylist = this.state.playlistTracks;\n    const newList = prevPlaylist.filter(a => a.id !== track.id);\n    this.setState({\n      playlistTracks: newList\n    });\n  }\n\n  updatePlaylistName(newName) {\n    this.setState({\n      playlistName: newName\n    });\n  }\n\n  savePlaylist() {\n    const uriList = this.state.playlistTracks.map(a => a.uri);\n    Spotify.savePlaylist(this.state.playlistName, uriList).then(() => this.setState({\n      playlistName: 'New Playlist',\n      playlistTracks: []\n    }));\n  }\n\n  search(term) {\n    Spotify.search(term).then(searchResults => this.setState({\n      searchResults: searchResults\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: \"mmm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), \"ing\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          onSearch: this.search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-playlist\",\n          children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n            searchResults: this.state.searchResults,\n            onAdd: this.addTrack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n            playlistName: this.state.playlistName,\n            onNameChange: this.updatePlaylistName,\n            playlistTracks: this.state.playlistTracks,\n            onRemove: this.removeTrack,\n            onSave: this.savePlaylist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Nate/Desktop/website/PNJaenichen.github.io/projects/jammming/src/Components/App/App.js"],"names":["React","SearchBar","SearchResults","Playlist","Spotify","App","Component","constructor","props","state","playlistName","playlistTracks","searchResults","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","componentDidMount","window","addEventListener","getAccessToken","track","prevPlaylist","trackIDs","map","a","id","includes","length","newList","push","setState","filter","newName","uriList","uri","then","term","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport { SearchBar } from '../SearchBar/SearchBar';\r\nimport { SearchResults } from '../SearchResults/SearchResults';\r\nimport { Playlist } from '../Playlist/Playlist';\r\nimport { Spotify } from '../../util/Spotify';\r\n\r\nexport class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playlistName: 'testList',\r\n      playlistTracks: [],\r\n      searchResults: [],\r\n    }\r\n    this.addTrack = this.addTrack.bind(this);\r\n    this.removeTrack = this.removeTrack.bind(this);\r\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\r\n    this.savePlaylist = this.savePlaylist.bind(this);\r\n    this.search = this.search.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('load', () => {Spotify.getAccessToken()});\r\n  }\r\n\r\n  addTrack(track) {\r\n    const prevPlaylist = this.state.playlistTracks;\r\n    const trackIDs = prevPlaylist.map(a => a.id);\r\n    if (!trackIDs.includes(track.id) || trackIDs.length > 0) {\r\n      const newList = prevPlaylist.push(track);\r\n      this.setState({playlistTracks: newList});\r\n    } \r\n  }\r\n\r\n  removeTrack(track) {\r\n    const prevPlaylist = this.state.playlistTracks;\r\n    const newList = prevPlaylist.filter(a => a.id !== track.id);\r\n    this.setState({playlistTracks: newList})\r\n  }\r\n\r\n  updatePlaylistName(newName) {\r\n    this.setState({playlistName: newName})\r\n  }\r\n\r\n  savePlaylist() {\r\n    const uriList = this.state.playlistTracks.map(a => a.uri);\r\n    Spotify.savePlaylist(this.state.playlistName, uriList).then(() =>\r\n      this.setState({playlistName: 'New Playlist', playlistTracks: []}));\r\n  }\r\n\r\n  search(term) {\r\n    Spotify.search(term).then(searchResults => this.setState({searchResults: searchResults}));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Ja<span className='highlight'>mmm</span>ing</h1>\r\n        <div className=\"App\">\r\n          <SearchBar onSearch={this.search} />\r\n          <div className='App-playlist'>\r\n            <SearchResults searchResults={this.state.searchResults} onAdd={this.addTrack}/>\r\n            <Playlist \r\n              playlistName={this.state.playlistName} \r\n              onNameChange={this.updatePlaylistName} \r\n              playlistTracks={this.state.playlistTracks} \r\n              onRemove={this.removeTrack} \r\n              onSave={this.savePlaylist} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}